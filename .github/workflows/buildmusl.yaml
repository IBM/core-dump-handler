name: Build and Push musl

on:
  push:
    tags:
      - 'v*'

env:
  IMAGE_NAME: core-dump-handler-musl
  IMAGE_TAGS: ${{ github.sha }}
  IMAGE_REGISTRY: quay.io
  IMAGE_NAMESPACE: icdh

jobs:
  push-quay:
    name: Build and push manifest
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, arm64 ]

    steps:
      # Checkout push-to-registry action github repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v2
      
      - id: tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@main
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.tag.outputs.TAG }}-linux-${{ matrix.arch }}
          arch: ${{ matrix.arch }}
          build-args: ARCH=${{ matrix.arch }}
          containerfiles: |
            ./musl.Dockerfile
      - name: Push To Quay
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.tag.outputs.TAG }}-linux-${{ matrix.arch }}
          registry: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Docker Login
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: quay.io
      - name: Build Manifest 
        id: manifests
        continue-on-error: true
        run: |
          docker manifest create \
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{env.IMAGE_NAME}}:${{ steps.tag.outputs.TAG }}  \
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{env.IMAGE_NAME}}:${{ steps.tag.outputs.TAG }}-linux-amd64 \
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{env.IMAGE_NAME}}:${{ steps.tag.outputs.TAG }}-linux-arm64
      - run: docker manifest push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{env.IMAGE_NAME}}:${{ steps.tag.outputs.TAG }}
